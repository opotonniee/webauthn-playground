/* [@simplewebauthn/browser] */
/*
 * Copyright (c) 2020 Matthew Miller
 * https://github.com/MasterKale/SimpleWebAuthn
 * License: https://github.com/MasterKale/SimpleWebAuthn/blob/master/LICENSE.md
 */
/* SNAPSHOT-2023-06-28 */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).SimpleWebAuthnBrowser={})}(this,(function(e){"use strict";function t(e){const t=new Uint8Array(e);let r="";for(const e of t)r+=String.fromCharCode(e);return btoa(r).replace(/\+/g,"-").replace(/\//g,"_").replace(/=/g,"")}function r(e){const t=e.replace(/-/g,"+").replace(/_/g,"/"),r=(4-t.length%4)%4,n=t.padEnd(t.length+r,"="),o=atob(n),i=new ArrayBuffer(o.length),a=new Uint8Array(i);for(let e=0;e<o.length;e++)a[e]=o.charCodeAt(e);return i}function n(){return void 0!==(null===window||void 0===window?void 0:window.PublicKeyCredential)&&"function"==typeof window.PublicKeyCredential}function o(e){const{id:t}=e;return{...e,id:r(t),transports:e.transports}}function i(e){return"localhost"===e||/^([a-z0-9]+(-[a-z0-9]+)*\.)+[a-z]{2,}$/i.test(e)}class a extends Error{constructor(e,t="WebAuthnError"){super(e),this.name=t}}const s=new class{createNewAbortSignal(){this.controller&&this.controller.abort("Cancelling existing WebAuthn API call for new one");const e=new AbortController;return this.controller=e,e.signal}},l=["cross-platform","platform"];function u(e){if(e&&!(l.indexOf(e)<0))return e}async function c(){const e=window.PublicKeyCredential;return void 0!==e.isConditionalMediationAvailable&&e.isConditionalMediationAvailable()}e.browserSupportsWebAuthn=n,e.browserSupportsWebAuthnAutofill=c,e.platformAuthenticatorIsAvailable=async function(){return!!n()&&PublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable()},e.startAuthentication=async function(e,l=!1){var d,w;if(!n())throw new Error("WebAuthn is not supported in this browser");let p;0!==(null===(d=e.allowCredentials)||void 0===d?void 0:d.length)&&(p=null===(w=e.allowCredentials)||void 0===w?void 0:w.map(o));const f={...e,challenge:r(e.challenge),allowCredentials:p},h={};if(l){if(!await c())throw Error("Browser does not support WebAuthn autofill");if(document.querySelectorAll("input[autocomplete*='webauthn']").length<1)throw Error('No <input> with `"webauthn"` in its `autocomplete` attribute was detected');h.mediation="conditional",f.allowCredentials=[]}let b;h.publicKey=f,h.signal=s.createNewAbortSignal();try{b=await navigator.credentials.get(h)}catch(e){throw function({error:e,options:t}){const{publicKey:r}=t;if(!r)throw Error("options was missing required publicKey property");if("AbortError"===e.name){if(t.signal===(new AbortController).signal)return new a("Authentication ceremony was sent an abort signal","AbortError")}else if("NotAllowedError"===e.name);else if("SecurityError"===e.name){const e=window.location.hostname;if(!i(e))return new a(`${window.location.hostname} is an invalid domain`,"SecurityError");if(r.rpId!==e)return new a(`The RP ID "${r.rpId}" is invalid for this domain`,"SecurityError")}else if("UnknownError"===e.name)return new a("The authenticator was unable to process the specified options, or could not create a new assertion signature","UnknownError");return e}({error:e,options:h})}if(!b)throw new Error("Authentication was not completed");const{id:y,rawId:g,response:m,type:E}=b;let A;var v;return m.userHandle&&(v=m.userHandle,A=new TextDecoder("utf-8").decode(v)),{id:y,rawId:t(g),response:{authenticatorData:t(m.authenticatorData),clientDataJSON:t(m.clientDataJSON),signature:t(m.signature),userHandle:A},type:E,clientExtensionResults:b.getClientExtensionResults(),authenticatorAttachment:u(b.authenticatorAttachment)}},e.startRegistration=async function(e){var l,c;if(!n())throw new Error("WebAuthn is not supported in this browser");const d={publicKey:{...e,challenge:r(e.challenge),user:{...e.user,id:(c=e.user.id,(new TextEncoder).encode(c))},excludeCredentials:null===(l=e.excludeCredentials)||void 0===l?void 0:l.map(o)}};let w;d.signal=s.createNewAbortSignal();try{w=await navigator.credentials.create(d)}catch(e){throw function({error:e,options:t}){var r,n;const{publicKey:o}=t;if(!o)throw Error("options was missing required publicKey property");if("AbortError"===e.name){if(t.signal===(new AbortController).signal)return new a("Registration ceremony was sent an abort signal","AbortError")}else if("ConstraintError"===e.name){if(!0===(null===(r=o.authenticatorSelection)||void 0===r?void 0:r.requireResidentKey))return new a("Discoverable credentials were required but no available authenticator supported it","ConstraintError");if("required"===(null===(n=o.authenticatorSelection)||void 0===n?void 0:n.userVerification))return new a("User verification was required but no available authenticator supported it","ConstraintError")}else{if("InvalidStateError"===e.name)return new a("The authenticator was previously registered","InvalidStateError");if("NotAllowedError"===e.name);else{if("NotSupportedError"===e.name)return 0===o.pubKeyCredParams.filter((e=>"public-key"===e.type)).length?new a('No entry in pubKeyCredParams was of type "public-key"',"NotSupportedError"):new a("No available authenticator supported any of the specified pubKeyCredParams algorithms","NotSupportedError");if("SecurityError"===e.name){const e=window.location.hostname;if(!i(e))return new a(`${window.location.hostname} is an invalid domain`,"SecurityError");if(o.rp.id!==e)return new a(`The RP ID "${o.rp.id}" is invalid for this domain`,"SecurityError")}else if("TypeError"===e.name){if(o.user.id.byteLength<1||o.user.id.byteLength>64)return new a("User ID was not between 1 and 64 characters","TypeError")}else if("UnknownError"===e.name)return new a("The authenticator was unable to process the specified options, or could not create a new credential","UnknownError")}}return e}({error:e,options:d})}if(!w)throw new Error("Registration was not completed");const{id:p,rawId:f,response:h,type:b}=w;let y;return"function"==typeof h.getTransports&&(y=h.getTransports()),{id:p,rawId:t(f),response:{attestationObject:t(h.attestationObject),clientDataJSON:t(h.clientDataJSON),transports:y},type:b,clientExtensionResults:w.getClientExtensionResults(),authenticatorAttachment:u(w.authenticatorAttachment)}},Object.defineProperty(e,"__esModule",{value:!0})}));
